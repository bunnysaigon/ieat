{"ast":null,"code":"import users from './users'; // Import your user data\n\nexport function getUsersWithCompatibleAvailability(currentUser, lunchtimeAvailability) {\n  const compatibleUsers = users.filter(user => {\n    // Implement your logic to check compatibility\n    // Return true if the user is compatible with the currentUser\n    return isCompatible(user, currentUser, lunchtimeAvailability);\n  });\n  return compatibleUsers;\n}\nfunction isCompatible(user, currentUser, lunchtimeAvailability) {\n  // Implement your compatibility logic here\n  // Compare the lunchtimeAvailability of currentUser and user\n  // Return true if they are compatible, otherwise false\n}","map":{"version":3,"names":["users","getUsersWithCompatibleAvailability","currentUser","lunchtimeAvailability","compatibleUsers","filter","user","isCompatible"],"sources":["/Users/mona/Desktop/CS465_Project/CS465/src/userUtils.js"],"sourcesContent":["import users from './users'; // Import your user data\n\nexport function getUsersWithCompatibleAvailability(currentUser, lunchtimeAvailability) {\n  const compatibleUsers = users.filter((user) => {\n    // Implement your logic to check compatibility\n    // Return true if the user is compatible with the currentUser\n    return isCompatible(user, currentUser, lunchtimeAvailability);\n  });\n  return compatibleUsers;\n}\n\nfunction isCompatible(user, currentUser, lunchtimeAvailability) {\n  // Implement your compatibility logic here\n  // Compare the lunchtimeAvailability of currentUser and user\n  // Return true if they are compatible, otherwise false\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,SAAS,CAAC,CAAC;;AAE7B,OAAO,SAASC,kCAAkCA,CAACC,WAAW,EAAEC,qBAAqB,EAAE;EACrF,MAAMC,eAAe,GAAGJ,KAAK,CAACK,MAAM,CAAEC,IAAI,IAAK;IAC7C;IACA;IACA,OAAOC,YAAY,CAACD,IAAI,EAAEJ,WAAW,EAAEC,qBAAqB,CAAC;EAC/D,CAAC,CAAC;EACF,OAAOC,eAAe;AACxB;AAEA,SAASG,YAAYA,CAACD,IAAI,EAAEJ,WAAW,EAAEC,qBAAqB,EAAE;EAC9D;EACA;EACA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}