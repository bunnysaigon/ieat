{"ast":null,"code":"import userData from \"./CurrentUser.json\";\nconst fs = require('fs');\n\n// Read the user data from a JSON file\n\nconst user = JSON.parse(userData);\nconsole.log(user);\n\n// Function to update user attributes\nexport function updateUser(updatedUserAttributes) {\n  // Check if the user exists based on userId (netid)\n  if (user.netid === updatedUserAttributes.netid) {\n    // Merge the updated attributes into the user object\n    const updatedUser = {\n      ...user,\n      ...updatedUserAttributes\n    };\n    console.log('updatedUser:', updatedUser);\n\n    // Update the user object\n    user = updatedUser;\n\n    // You can also save the updated user object back to the file\n    try {\n      fs.writeFileSync('user.json', JSON.stringify(updatedUser, null, 2), 'utf8');\n    } catch (err) {\n      console.error('Error writing user data to file:', err);\n    }\n    return updatedUser;\n  } else {\n    // Handle the case where the user does not exist\n    return null;\n  }\n}\n\n// Function to retrieve user data by netid\nexport function getUser(input_user) {\n  return user;\n}","map":{"version":3,"names":["userData","fs","require","user","JSON","parse","console","log","updateUser","updatedUserAttributes","netid","updatedUser","writeFileSync","stringify","err","error","getUser","input_user"],"sources":["/Users/mona/Desktop/CS465_Project/CS465/src/CurrentUser.js"],"sourcesContent":["import userData from \"./CurrentUser.json\";\n\nconst fs = require('fs');\n\n// Read the user data from a JSON file\n\nconst user = JSON.parse(userData);\nconsole.log(user);\n\n// Function to update user attributes\nexport function updateUser(updatedUserAttributes) {\n  // Check if the user exists based on userId (netid)\n  if (user.netid === updatedUserAttributes.netid) {\n    // Merge the updated attributes into the user object\n    const updatedUser = { ...user, ...updatedUserAttributes };\n    console.log('updatedUser:', updatedUser);\n\n    // Update the user object\n    user = updatedUser;\n\n    // You can also save the updated user object back to the file\n    try {\n      fs.writeFileSync('user.json', JSON.stringify(updatedUser, null, 2), 'utf8');\n    } catch (err) {\n      console.error('Error writing user data to file:', err);\n    }\n\n    return updatedUser;\n  } else {\n    // Handle the case where the user does not exist\n    return null;\n  }\n}\n\n// Function to retrieve user data by netid\nexport function getUser(input_user) {\n  return user;\n}\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oBAAoB;AAEzC,MAAMC,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;;AAExB;;AAEA,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,QAAQ,CAAC;AACjCM,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;;AAEjB;AACA,OAAO,SAASK,UAAUA,CAACC,qBAAqB,EAAE;EAChD;EACA,IAAIN,IAAI,CAACO,KAAK,KAAKD,qBAAqB,CAACC,KAAK,EAAE;IAC9C;IACA,MAAMC,WAAW,GAAG;MAAE,GAAGR,IAAI;MAAE,GAAGM;IAAsB,CAAC;IACzDH,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEI,WAAW,CAAC;;IAExC;IACAR,IAAI,GAAGQ,WAAW;;IAElB;IACA,IAAI;MACFV,EAAE,CAACW,aAAa,CAAC,WAAW,EAAER,IAAI,CAACS,SAAS,CAACF,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC;IAC7E,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZR,OAAO,CAACS,KAAK,CAAC,kCAAkC,EAAED,GAAG,CAAC;IACxD;IAEA,OAAOH,WAAW;EACpB,CAAC,MAAM;IACL;IACA,OAAO,IAAI;EACb;AACF;;AAEA;AACA,OAAO,SAASK,OAAOA,CAACC,UAAU,EAAE;EAClC,OAAOd,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}