{"ast":null,"code":"// Read the user data from a JSON file\n\nconst user = require('./CurrentUser.json');\nconsole.log('user', user);\n\n// Function to update user attributes\nexport function updateUser(updatedUserAttributes) {\n  // Check if the user exists based on userId (netid)\n  if (user.netid === updatedUserAttributes.netid) {\n    // Merge the updated attributes into the user object\n    const updatedUser = {\n      ...user,\n      ...updatedUserAttributes\n    };\n    console.log('updatedUser:', updatedUser);\n\n    // Update the user object\n    user = updatedUser;\n\n    // You can also save the updated user object back to the file\n    // try {\n    //   fs.writeFileSync('CurrentUser.json', JSON.stringify(updatedUser, null, 2), 'utf8');\n    // } catch (err) {\n    //   console.error('Error writing user data to file:', err);\n    // }\n\n    return updatedUser;\n  } else {\n    // Handle the case where the user does not exist\n    return null;\n  }\n}\n\n// Function to retrieve user data by netid\nexport function getUser(input_user) {\n  return user;\n}","map":{"version":3,"names":["user","require","console","log","updateUser","updatedUserAttributes","netid","updatedUser","getUser","input_user"],"sources":["/Users/mona/Desktop/CS465_Project/CS465/src/CurrentUser.js"],"sourcesContent":["// Read the user data from a JSON file\n\n\nconst user = require('./CurrentUser.json');\nconsole.log('user', user);\n\n\n// Function to update user attributes\nexport function updateUser(updatedUserAttributes) {\n  // Check if the user exists based on userId (netid)\n  if (user.netid === updatedUserAttributes.netid) {\n    // Merge the updated attributes into the user object\n    const updatedUser = { ...user, ...updatedUserAttributes };\n    console.log('updatedUser:', updatedUser);\n\n    // Update the user object\n    user = updatedUser;\n\n    // You can also save the updated user object back to the file\n    // try {\n    //   fs.writeFileSync('CurrentUser.json', JSON.stringify(updatedUser, null, 2), 'utf8');\n    // } catch (err) {\n    //   console.error('Error writing user data to file:', err);\n    // }\n\n    return updatedUser;\n  } else {\n    // Handle the case where the user does not exist\n    return null;\n  }\n}\n\n// Function to retrieve user data by netid\nexport function getUser(input_user) {\n  return user;\n}\n"],"mappings":"AAAA;;AAGA,MAAMA,IAAI,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAC1CC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEH,IAAI,CAAC;;AAGzB;AACA,OAAO,SAASI,UAAUA,CAACC,qBAAqB,EAAE;EAChD;EACA,IAAIL,IAAI,CAACM,KAAK,KAAKD,qBAAqB,CAACC,KAAK,EAAE;IAC9C;IACA,MAAMC,WAAW,GAAG;MAAE,GAAGP,IAAI;MAAE,GAAGK;IAAsB,CAAC;IACzDH,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEI,WAAW,CAAC;;IAExC;IACAP,IAAI,GAAGO,WAAW;;IAElB;IACA;IACA;IACA;IACA;IACA;;IAEA,OAAOA,WAAW;EACpB,CAAC,MAAM;IACL;IACA,OAAO,IAAI;EACb;AACF;;AAEA;AACA,OAAO,SAASC,OAAOA,CAACC,UAAU,EAAE;EAClC,OAAOT,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}